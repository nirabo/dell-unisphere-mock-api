.venv.test/bin/pytest -v tests/ --cov=app --cov-report=term-missing
============================= test session starts ==============================
platform linux -- Python 3.12.3, pytest-7.4.3, pluggy-1.5.0 -- /home/lpetrov/projects/sandbox/dell-unisphere-mock-api/.venv.test/bin/python3
cachedir: .pytest_cache
rootdir: /home/lpetrov/projects/sandbox/dell-unisphere-mock-api
plugins: anyio-3.7.1, asyncio-0.21.1, cov-4.1.0
asyncio: mode=Mode.STRICT
collecting ... collected 74 items

tests/test_auth.py::test_password_verification PASSED                    [  1%]
tests/test_auth.py::test_get_current_user_valid_credentials PASSED       [  2%]
tests/test_auth.py::test_get_current_user_invalid_credentials PASSED     [  4%]
tests/test_auth.py::test_get_current_user_missing_emc_header PASSED      [  5%]
tests/test_auth.py::test_verify_csrf_token_post_request PASSED           [  6%]
tests/test_auth.py::test_verify_csrf_token_get_request PASSED            [  8%]
tests/test_controllers.py::TestStorageResourceController::test_create_storage_resource PASSED [  9%]
tests/test_controllers.py::TestStorageResourceController::test_get_storage_resource PASSED [ 10%]
tests/test_controllers.py::TestStorageResourceController::test_list_storage_resources PASSED [ 12%]
tests/test_controllers.py::TestStorageResourceController::test_update_storage_resource PASSED [ 13%]
tests/test_controllers.py::TestStorageResourceController::test_delete_storage_resource PASSED [ 14%]
tests/test_controllers.py::TestStorageResourceController::test_host_access_management PASSED [ 16%]
tests/test_controllers.py::TestFilesystemController::test_create_filesystem PASSED [ 17%]
tests/test_controllers.py::TestFilesystemController::test_get_filesystem PASSED [ 18%]
tests/test_controllers.py::TestNasServerController::test_create_nas_server PASSED [ 20%]
tests/test_controllers.py::TestNasServerController::test_get_nas_server PASSED [ 21%]
tests/test_disk.py::test_create_disk FAILED                              [ 22%]
tests/test_disk.py::test_create_disk_invalid_type FAILED                 [ 24%]
tests/test_disk.py::test_get_disk FAILED                                 [ 25%]
tests/test_disk.py::test_list_disks FAILED                               [ 27%]
tests/test_disk.py::test_update_disk FAILED                              [ 28%]
tests/test_disk.py::test_delete_disk FAILED                              [ 29%]
tests/test_disk.py::test_get_disks_by_pool FAILED                        [ 31%]
tests/test_disk.py::test_get_disks_by_disk_group FAILED                  [ 32%]
tests/test_disk_group.py::test_create_disk_group FAILED                  [ 33%]
tests/test_disk_group.py::test_create_disk_group_invalid_raid FAILED     [ 35%]
tests/test_disk_group.py::test_get_disk_group FAILED                     [ 36%]
tests/test_disk_group.py::test_list_disk_groups FAILED                   [ 37%]
tests/test_disk_group.py::test_update_disk_group FAILED                  [ 39%]
tests/test_disk_group.py::test_delete_disk_group FAILED                  [ 40%]
tests/test_lun.py::test_create_lun FAILED                                [ 41%]
tests/test_lun.py::test_get_lun FAILED                                   [ 43%]
tests/test_lun.py::test_get_lun_by_name FAILED                           [ 44%]
tests/test_lun.py::test_list_luns FAILED                                 [ 45%]
tests/test_lun.py::test_get_luns_by_pool FAILED                          [ 47%]
tests/test_lun.py::test_modify_lun FAILED                                [ 48%]
tests/test_lun.py::test_delete_lun FAILED                                [ 50%]
tests/test_lun.py::test_delete_lun_by_name FAILED                        [ 51%]
tests/test_models.py::TestStorageResourceModel::test_create_storage_resource PASSED [ 52%]
tests/test_models.py::TestStorageResourceModel::test_get_storage_resource PASSED [ 54%]
tests/test_models.py::TestStorageResourceModel::test_list_storage_resources PASSED [ 55%]
tests/test_models.py::TestStorageResourceModel::test_update_storage_resource PASSED [ 56%]
tests/test_models.py::TestStorageResourceModel::test_delete_storage_resource PASSED [ 58%]
tests/test_models.py::TestStorageResourceModel::test_host_access_management PASSED [ 59%]
tests/test_models.py::TestStorageResourceModel::test_update_usage_stats PASSED [ 60%]
tests/test_models.py::TestFilesystemModel::test_create_filesystem PASSED [ 62%]
tests/test_models.py::TestFilesystemModel::test_get_filesystem PASSED    [ 63%]
tests/test_models.py::TestFilesystemModel::test_list_filesystems PASSED  [ 64%]
tests/test_models.py::TestNasServerModel::test_create_nas_server PASSED  [ 66%]
tests/test_models.py::TestNasServerModel::test_get_nas_server PASSED     [ 67%]
tests/test_models.py::TestNasServerModel::test_list_nas_servers PASSED   [ 68%]
tests/test_pool.py::test_create_pool FAILED                              [ 70%]
tests/test_pool.py::test_get_pool FAILED                                 [ 71%]
tests/test_pool.py::test_get_pool_by_name FAILED                         [ 72%]
tests/test_pool.py::test_list_pools FAILED                               [ 74%]
tests/test_pool.py::test_modify_pool FAILED                              [ 75%]
tests/test_pool.py::test_delete_pool FAILED                              [ 77%]
tests/test_pool.py::test_delete_pool_by_name FAILED                      [ 78%]
tests/test_pool_unit.py::test_create_pool_unit FAILED                    [ 79%]
tests/test_pool_unit.py::test_get_pool_unit FAILED                       [ 81%]
tests/test_pool_unit.py::test_list_pool_units FAILED                     [ 82%]
tests/test_pool_unit.py::test_update_pool_unit FAILED                    [ 83%]
tests/test_pool_unit.py::test_delete_pool_unit FAILED                    [ 85%]
tests/test_routes.py::TestStorageResourceRoutes::test_create_storage_resource FAILED [ 86%]
tests/test_routes.py::TestStorageResourceRoutes::test_get_storage_resource FAILED [ 87%]
tests/test_routes.py::TestStorageResourceRoutes::test_list_storage_resources FAILED [ 89%]
tests/test_routes.py::TestStorageResourceRoutes::test_update_storage_resource FAILED [ 90%]
tests/test_routes.py::TestStorageResourceRoutes::test_delete_storage_resource FAILED [ 91%]
tests/test_routes.py::TestStorageResourceRoutes::test_host_access_management FAILED [ 93%]
tests/test_routes.py::TestStorageResourceRoutes::test_unauthorized_access FAILED [ 94%]
tests/test_routes.py::TestFilesystemRoutes::test_create_filesystem FAILED [ 95%]
tests/test_routes.py::TestFilesystemRoutes::test_get_filesystem FAILED   [ 97%]
tests/test_routes.py::TestNasServerRoutes::test_create_nas_server FAILED [ 98%]
tests/test_routes.py::TestNasServerRoutes::test_get_nas_server FAILED    [100%]WARNING: Failed to generate report: No data to report.



=================================== FAILURES ===================================
_______________________________ test_create_disk _______________________________

client = <starlette.testclient.TestClient object at 0x7e0c51bab350>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}

    def test_create_disk(client, auth_headers):
        """Test creating a new disk."""
        disk_data = {
            "name": "test_disk",
            "description": "Test disk",
            "disk_type": DiskTypeEnum.SAS,
            "tier_type": DiskTierEnum.PERFORMANCE,
            "size": 1000000,
            "slot_number": 1,
            "firmware_version": "1.0.0"
        }
    
>       response = client.post(
            "/api/types/disk/instances",
            json=disk_data,
            headers=auth_headers
        )

tests/test_disk.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c51112210>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
________________________ test_create_disk_invalid_type _________________________

client = <starlette.testclient.TestClient object at 0x7e0c51113ef0>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}

    def test_create_disk_invalid_type(client, auth_headers):
        """Test creating a disk with invalid disk type."""
        disk_data = {
            "name": "test_disk",
            "disk_type": "INVALID_TYPE",
            "tier_type": DiskTierEnum.PERFORMANCE,
            "size": 1000000,
            "slot_number": 1
        }
    
>       response = client.post(
            "/api/types/disk/instances",
            json=disk_data,
            headers=auth_headers
        )

tests/test_disk.py:46: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c51154d10>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
________________________________ test_get_disk _________________________________

client = <starlette.testclient.TestClient object at 0x7e0c51156de0>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}

    def test_get_disk(client, auth_headers):
        """Test getting a specific disk."""
        # First create a disk
        disk_data = {
            "name": "test_disk",
            "disk_type": DiskTypeEnum.SAS,
            "tier_type": DiskTierEnum.PERFORMANCE,
            "size": 1000000,
            "slot_number": 1
        }
>       create_response = client.post(
            "/api/types/disk/instances",
            json=disk_data,
            headers=auth_headers
        )

tests/test_disk.py:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c511d8380>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_______________________________ test_list_disks ________________________________

client = <starlette.testclient.TestClient object at 0x7e0c51156090>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}

    def test_list_disks(client, auth_headers):
        """Test listing all disks."""
        response = client.get(
            "/api/types/disk/instances",
            headers=auth_headers
        )
>       assert response.status_code == 200
E       assert 401 == 200
E        +  where 401 = <Response [401 Unauthorized]>.status_code

tests/test_disk.py:86: AssertionError
_______________________________ test_update_disk _______________________________

client = <starlette.testclient.TestClient object at 0x7e0c511db050>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}

    def test_update_disk(client, auth_headers):
        """Test updating a disk."""
        # First create a disk
        disk_data = {
            "name": "test_disk",
            "disk_type": DiskTypeEnum.SAS,
            "tier_type": DiskTierEnum.PERFORMANCE,
            "size": 1000000,
            "slot_number": 1
        }
>       create_response = client.post(
            "/api/types/disk/instances",
            json=disk_data,
            headers=auth_headers
        )

tests/test_disk.py:99: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c51170d40>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_______________________________ test_delete_disk _______________________________

client = <starlette.testclient.TestClient object at 0x7e0c511d9640>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}

    def test_delete_disk(client, auth_headers):
        """Test deleting a disk."""
        # First create a disk
        disk_data = {
            "name": "test_disk",
            "disk_type": DiskTypeEnum.SAS,
            "tier_type": DiskTierEnum.PERFORMANCE,
            "size": 1000000,
            "slot_number": 1
        }
>       create_response = client.post(
            "/api/types/disk/instances",
            json=disk_data,
            headers=auth_headers
        )

tests/test_disk.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c51170440>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
____________________________ test_get_disks_by_pool ____________________________

client = <starlette.testclient.TestClient object at 0x7e0c511dbe60>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}

    def test_get_disks_by_pool(client, auth_headers):
        """Test getting disks by pool ID."""
        # First create a disk with a pool ID
        disk_data = {
            "name": "test_disk",
            "disk_type": DiskTypeEnum.SAS,
            "tier_type": DiskTierEnum.PERFORMANCE,
            "size": 1000000,
            "slot_number": 1,
            "pool_id": "test_pool"
        }
>       client.post(
            "/api/types/disk/instances",
            json=disk_data,
            headers=auth_headers
        )

tests/test_disk.py:165: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:449: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c51179880>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_________________________ test_get_disks_by_disk_group _________________________

client = <starlette.testclient.TestClient object at 0x7e0c511736b0>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}

    def test_get_disks_by_disk_group(client, auth_headers):
        """Test getting disks by disk group ID."""
        # First create a disk with a disk group ID
        disk_data = {
            "name": "test_disk",
            "disk_type": DiskTypeEnum.SAS,
            "tier_type": DiskTierEnum.PERFORMANCE,
            "size": 1000000,
            "slot_number": 1,
            "disk_group_id": "test_group"
        }
>       client.post(
            "/api/types/disk/instances",
            json=disk_data,
            headers=auth_headers
        )

tests/test_disk.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c5117a1e0>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
____________________________ test_create_disk_group ____________________________

    def test_create_disk_group():
        """Test creating a new disk group."""
        disk_group_data = {
            "name": "test_disk_group",
            "description": "Test disk group",
            "raid_type": RaidTypeEnum.RAID5,
            "stripe_width": RaidStripeWidthEnum.FIVE,
            "disk_ids": ["1", "2", "3", "4", "5"],
            "size_total": 1000000,
            "size_used": 0,
            "size_free": 1000000
        }
    
>       response = client.post(
            "/api/types/diskGroup/instances",
            json=disk_group_data,
            headers=get_auth_headers()
        )

tests/test_disk_group.py:25: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:449: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50cf6390>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_____________________ test_create_disk_group_invalid_raid ______________________

    def test_create_disk_group_invalid_raid():
        """Test creating a disk group with invalid RAID configuration."""
        disk_group_data = {
            "name": "test_disk_group",
            "raid_type": RaidTypeEnum.RAID5,
            "stripe_width": RaidStripeWidthEnum.FIVE,
            "disk_ids": ["1", "2", "3"],  # Not enough disks for RAID5
            "size_total": 1000000,
            "size_used": 0,
            "size_free": 1000000
        }
    
>       response = client.post(
            "/api/types/diskGroup/instances",
            json=disk_group_data,
            headers=get_auth_headers()
        )

tests/test_disk_group.py:47: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50c34a40>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_____________________________ test_get_disk_group ______________________________

    def test_get_disk_group():
        """Test getting a specific disk group."""
        # First create a disk group
        disk_group_data = {
            "name": "test_disk_group",
            "raid_type": RaidTypeEnum.RAID5,
            "stripe_width": RaidStripeWidthEnum.FIVE,
            "disk_ids": ["1", "2", "3", "4", "5"],
            "size_total": 1000000,
            "size_used": 0,
            "size_free": 1000000
        }
>       create_response = client.post(
            "/api/types/diskGroup/instances",
            json=disk_group_data,
            headers=get_auth_headers()
        )

tests/test_disk_group.py:66: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50c37080>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
____________________________ test_list_disk_groups _____________________________

    def test_list_disk_groups():
        """Test listing all disk groups."""
        response = client.get(
            "/api/types/diskGroup/instances",
            headers=get_auth_headers()
        )
>       assert response.status_code == 200
E       assert 401 == 200
E        +  where 401 = <Response [401 Unauthorized]>.status_code

tests/test_disk_group.py:89: AssertionError
____________________________ test_update_disk_group ____________________________

    def test_update_disk_group():
        """Test updating a disk group."""
        # First create a disk group
        disk_group_data = {
            "name": "test_disk_group",
            "raid_type": RaidTypeEnum.RAID5,
            "stripe_width": RaidStripeWidthEnum.FIVE,
            "disk_ids": ["1", "2", "3", "4", "5"],
            "size_total": 1000000,
            "size_used": 0,
            "size_free": 1000000
        }
>       create_response = client.post(
            "/api/types/diskGroup/instances",
            json=disk_group_data,
            headers=get_auth_headers()
        )

tests/test_disk_group.py:104: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50cea9f0>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
____________________________ test_delete_disk_group ____________________________

    def test_delete_disk_group():
        """Test deleting a disk group."""
        # First create a disk group
        disk_group_data = {
            "name": "test_disk_group",
            "raid_type": RaidTypeEnum.RAID5,
            "stripe_width": RaidStripeWidthEnum.FIVE,
            "disk_ids": ["1", "2", "3", "4", "5"],
            "size_total": 1000000,
            "size_used": 0,
            "size_free": 1000000
        }
>       create_response = client.post(
            "/api/types/diskGroup/instances",
            json=disk_group_data,
            headers=get_auth_headers()
        )

tests/test_disk_group.py:138: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50ca7200>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_______________________________ test_create_lun ________________________________

sample_pool_data = {'alertThreshold': 80, 'description': 'Test pool for unit tests', 'isFASTCacheEnabled': False, 'isFASTVpScheduleEnabled': True, ...}
sample_lun_data = {'defaultNode': 0, 'description': 'Test LUN for unit tests', 'hostAccess': [], 'isCompressionEnabled': False, ...}
auth_headers = {'Authorization': 'Bearer some_token'}

    def test_create_lun(sample_pool_data, sample_lun_data, auth_headers):
        # First create a pool
>       pool_response = client.post("/api/types/pool/instances", json=sample_pool_data, headers=auth_headers)

tests/test_lun.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:449: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50ca7e00>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_________________________________ test_get_lun _________________________________

sample_pool_data = {'alertThreshold': 80, 'description': 'Test pool for unit tests', 'isFASTCacheEnabled': False, 'isFASTVpScheduleEnabled': True, ...}
sample_lun_data = {'defaultNode': 0, 'description': 'Test LUN for unit tests', 'hostAccess': [], 'isCompressionEnabled': False, ...}
auth_headers = {'Authorization': 'Bearer some_token'}

    def test_get_lun(sample_pool_data, sample_lun_data, auth_headers):
        # First create a pool
>       pool_response = client.post("/api/types/pool/instances", json=sample_pool_data, headers=auth_headers)

tests/test_lun.py:70: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50c34ce0>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_____________________________ test_get_lun_by_name _____________________________

sample_pool_data = {'alertThreshold': 80, 'description': 'Test pool for unit tests', 'isFASTCacheEnabled': False, 'isFASTVpScheduleEnabled': True, ...}
sample_lun_data = {'defaultNode': 0, 'description': 'Test LUN for unit tests', 'hostAccess': [], 'isCompressionEnabled': False, ...}
auth_headers = {'Authorization': 'Bearer some_token'}

    def test_get_lun_by_name(sample_pool_data, sample_lun_data, auth_headers):
        # First create a pool
>       pool_response = client.post("/api/types/pool/instances", json=sample_pool_data, headers=auth_headers)

tests/test_lun.py:88: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c51178410>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
________________________________ test_list_luns ________________________________

sample_pool_data = {'alertThreshold': 80, 'description': 'Test pool for unit tests', 'isFASTCacheEnabled': False, 'isFASTVpScheduleEnabled': True, ...}
sample_lun_data = {'defaultNode': 0, 'description': 'Test LUN for unit tests', 'hostAccess': [], 'isCompressionEnabled': False, ...}
auth_headers = {'Authorization': 'Bearer some_token'}

    def test_list_luns(sample_pool_data, sample_lun_data, auth_headers):
        # First create a pool
>       pool_response = client.post("/api/types/pool/instances", json=sample_pool_data, headers=auth_headers)

tests/test_lun.py:104: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:449: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c511dab40>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
____________________________ test_get_luns_by_pool _____________________________

sample_pool_data = {'alertThreshold': 80, 'description': 'Test pool for unit tests', 'isFASTCacheEnabled': False, 'isFASTVpScheduleEnabled': True, ...}
sample_lun_data = {'defaultNode': 0, 'description': 'Test LUN for unit tests', 'hostAccess': [], 'isCompressionEnabled': False, ...}
auth_headers = {'Authorization': 'Bearer some_token'}

    def test_get_luns_by_pool(sample_pool_data, sample_lun_data, auth_headers):
        # First create a pool
>       pool_response = client.post("/api/types/pool/instances", json=sample_pool_data, headers=auth_headers)

tests/test_lun.py:122: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c51156db0>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_______________________________ test_modify_lun ________________________________

sample_pool_data = {'alertThreshold': 80, 'description': 'Test pool for unit tests', 'isFASTCacheEnabled': False, 'isFASTVpScheduleEnabled': True, ...}
sample_lun_data = {'defaultNode': 0, 'description': 'Test LUN for unit tests', 'hostAccess': [], 'isCompressionEnabled': False, ...}
auth_headers = {'Authorization': 'Bearer some_token'}

    def test_modify_lun(sample_pool_data, sample_lun_data, auth_headers):
        # First create a pool
>       pool_response = client.post("/api/types/pool/instances", json=sample_pool_data, headers=auth_headers)

tests/test_lun.py:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c51111d30>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_______________________________ test_delete_lun ________________________________

sample_pool_data = {'alertThreshold': 80, 'description': 'Test pool for unit tests', 'isFASTCacheEnabled': False, 'isFASTVpScheduleEnabled': True, ...}
sample_lun_data = {'defaultNode': 0, 'description': 'Test LUN for unit tests', 'hostAccess': [], 'isCompressionEnabled': False, ...}
auth_headers = {'Authorization': 'Bearer some_token'}

    def test_delete_lun(sample_pool_data, sample_lun_data, auth_headers):
        # First create a pool
>       pool_response = client.post("/api/types/pool/instances", json=sample_pool_data, headers=auth_headers)

tests/test_lun.py:169: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c51110980>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
___________________________ test_delete_lun_by_name ____________________________

sample_pool_data = {'alertThreshold': 80, 'description': 'Test pool for unit tests', 'isFASTCacheEnabled': False, 'isFASTVpScheduleEnabled': True, ...}
sample_lun_data = {'defaultNode': 0, 'description': 'Test LUN for unit tests', 'hostAccess': [], 'isCompressionEnabled': False, ...}
auth_headers = {'Authorization': 'Bearer some_token'}

    def test_delete_lun_by_name(sample_pool_data, sample_lun_data, auth_headers):
        # First create a pool
>       pool_response = client.post("/api/types/pool/instances", json=sample_pool_data, headers=auth_headers)

tests/test_lun.py:188: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:449: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50cea7e0>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_______________________________ test_create_pool _______________________________

test_client = <starlette.testclient.TestClient object at 0x7e0c50ce8c50>
sample_pool_data = {'alertThreshold': 80, 'description': 'Test pool for unit tests', 'isFASTCacheEnabled': False, 'isFASTVpScheduleEnabled': True, ...}
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}

    def test_create_pool(test_client, sample_pool_data, auth_headers):
>       response = test_client.post("/api/types/pool/instances", json=sample_pool_data, headers=auth_headers)

tests/test_pool.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50cf5520>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
________________________________ test_get_pool _________________________________

test_client = <starlette.testclient.TestClient object at 0x7e0c50ca4830>
sample_pool_data = {'alertThreshold': 80, 'description': 'Test pool for unit tests', 'isFASTCacheEnabled': False, 'isFASTVpScheduleEnabled': True, ...}
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}

    def test_get_pool(test_client, sample_pool_data, auth_headers):
        # First create a pool
>       create_response = test_client.post("/api/types/pool/instances", json=sample_pool_data, headers=auth_headers)

tests/test_pool.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50cb1160>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
____________________________ test_get_pool_by_name _____________________________

test_client = <starlette.testclient.TestClient object at 0x7e0c50cb1070>
sample_pool_data = {'alertThreshold': 80, 'description': 'Test pool for unit tests', 'isFASTCacheEnabled': False, 'isFASTVpScheduleEnabled': True, ...}
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}

    def test_get_pool_by_name(test_client, sample_pool_data, auth_headers):
        # First create a pool
>       test_client.post("/api/types/pool/instances", json=sample_pool_data, headers=auth_headers)

tests/test_pool.py:49: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50c93740>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_______________________________ test_list_pools ________________________________

test_client = <starlette.testclient.TestClient object at 0x7e0c50c93d10>
sample_pool_data = {'alertThreshold': 80, 'description': 'Test pool for unit tests', 'isFASTCacheEnabled': False, 'isFASTVpScheduleEnabled': True, ...}
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}

    def test_list_pools(test_client, sample_pool_data, auth_headers):
        # First create a pool
>       test_client.post("/api/types/pool/instances", json=sample_pool_data, headers=auth_headers)

tests/test_pool.py:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50c2cd70>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_______________________________ test_modify_pool _______________________________

test_client = <starlette.testclient.TestClient object at 0x7e0c50c930b0>
sample_pool_data = {'alertThreshold': 80, 'description': 'Test pool for unit tests', 'isFASTCacheEnabled': False, 'isFASTVpScheduleEnabled': True, ...}
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}

    def test_modify_pool(test_client, sample_pool_data, auth_headers):
        # First create a pool
>       create_response = test_client.post("/api/types/pool/instances", json=sample_pool_data, headers=auth_headers)

tests/test_pool.py:72: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50c2fad0>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_______________________________ test_delete_pool _______________________________

test_client = <starlette.testclient.TestClient object at 0x7e0c50c2c860>
sample_pool_data = {'alertThreshold': 80, 'description': 'Test pool for unit tests', 'isFASTCacheEnabled': False, 'isFASTVpScheduleEnabled': True, ...}
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}

    def test_delete_pool(test_client, sample_pool_data, auth_headers):
        # First create a pool
>       create_response = test_client.post("/api/types/pool/instances", json=sample_pool_data, headers=auth_headers)

tests/test_pool.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50c85670>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
___________________________ test_delete_pool_by_name ___________________________

test_client = <starlette.testclient.TestClient object at 0x7e0c50c2d910>
sample_pool_data = {'alertThreshold': 80, 'description': 'Test pool for unit tests', 'isFASTCacheEnabled': False, 'isFASTVpScheduleEnabled': True, ...}
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}

    def test_delete_pool_by_name(test_client, sample_pool_data, auth_headers):
        # First create a pool
>       test_client.post("/api/types/pool/instances", json=sample_pool_data, headers=auth_headers)

tests/test_pool.py:105: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50c93800>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
____________________________ test_create_pool_unit _____________________________

    def test_create_pool_unit():
        """Test creating a new pool unit."""
        pool_unit_data = {
            "name": "test_pool_unit",
            "description": "Test pool unit",
            "type": PoolUnitTypeEnum.VIRTUAL_DISK,
            "size_total": 1000000,
            "size_used": 0,
            "size_free": 1000000,
            "raid_type": "RAID5",
            "disk_group": "1"
        }
    
>       response = client.post(
            "/api/types/poolUnit/instances",
            json=pool_unit_data,
            headers=get_auth_headers()
        )

tests/test_pool_unit.py:25: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50cf61b0>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
______________________________ test_get_pool_unit ______________________________

    def test_get_pool_unit():
        """Test getting a specific pool unit."""
        # First create a pool unit
        pool_unit_data = {
            "name": "test_pool_unit",
            "type": PoolUnitTypeEnum.VIRTUAL_DISK,
            "size_total": 1000000,
            "size_used": 0,
            "size_free": 1000000
        }
>       create_response = client.post(
            "/api/types/poolUnit/instances",
            json=pool_unit_data,
            headers=get_auth_headers()
        )

tests/test_pool_unit.py:45: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:449: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c51112570>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_____________________________ test_list_pool_units _____________________________

    def test_list_pool_units():
        """Test listing all pool units."""
        response = client.get(
            "/api/types/poolUnit/instances",
            headers=get_auth_headers()
        )
>       assert response.status_code == 200
E       assert 401 == 200
E        +  where 401 = <Response [401 Unauthorized]>.status_code

tests/test_pool_unit.py:68: AssertionError
____________________________ test_update_pool_unit _____________________________

    def test_update_pool_unit():
        """Test updating a pool unit."""
        # First create a pool unit
        pool_unit_data = {
            "name": "test_pool_unit",
            "type": PoolUnitTypeEnum.VIRTUAL_DISK,
            "size_total": 1000000,
            "size_used": 0,
            "size_free": 1000000
        }
>       create_response = client.post(
            "/api/types/poolUnit/instances",
            json=pool_unit_data,
            headers=get_auth_headers()
        )

tests/test_pool_unit.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c51111250>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
____________________________ test_delete_pool_unit _____________________________

    def test_delete_pool_unit():
        """Test deleting a pool unit."""
        # First create a pool unit
        pool_unit_data = {
            "name": "test_pool_unit",
            "type": PoolUnitTypeEnum.VIRTUAL_DISK,
            "size_total": 1000000,
            "size_used": 0,
            "size_free": 1000000
        }
>       create_response = client.post(
            "/api/types/poolUnit/instances",
            json=pool_unit_data,
            headers=get_auth_headers()
        )

tests/test_pool_unit.py:113: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:449: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c5117a870>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
____________ TestStorageResourceRoutes.test_create_storage_resource ____________

self = <tests.test_routes.TestStorageResourceRoutes object at 0x7e0c51ba8530>
test_client = <starlette.testclient.TestClient object at 0x7e0c51113110>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}
sample_resource_data = {'description': 'Test storage resource', 'isAdvancedDedupEnabled': False, 'isCompressionEnabled': False, 'isThinEnabled': True, ...}

    def test_create_storage_resource(self, test_client, auth_headers, sample_resource_data):
>       response = test_client.post(
            "/api/types/storageResource/instances",
            json=sample_resource_data,
            headers=auth_headers
        )

tests/test_routes.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50c379e0>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_____________ TestStorageResourceRoutes.test_get_storage_resource ______________

self = <tests.test_routes.TestStorageResourceRoutes object at 0x7e0c51ba86e0>
test_client = <starlette.testclient.TestClient object at 0x7e0c50c37500>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}
sample_resource_data = {'description': 'Test storage resource', 'isAdvancedDedupEnabled': False, 'isCompressionEnabled': False, 'isThinEnabled': True, ...}

    def test_get_storage_resource(self, test_client, auth_headers, sample_resource_data):
        # First create a resource
>       resource = self.test_create_storage_resource(test_client, auth_headers, sample_resource_data)

tests/test_routes.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_routes.py:20: in test_create_storage_resource
    response = test_client.post(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:449: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50ca70e0>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
____________ TestStorageResourceRoutes.test_list_storage_resources _____________

self = <tests.test_routes.TestStorageResourceRoutes object at 0x7e0c51ba8890>
test_client = <starlette.testclient.TestClient object at 0x7e0c51110c80>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}
sample_resource_data = {'description': 'Test storage resource', 'isAdvancedDedupEnabled': False, 'isCompressionEnabled': False, 'isThinEnabled': True, ...}

    def test_list_storage_resources(self, test_client, auth_headers, sample_resource_data):
        # Create a resource first
>       self.test_create_storage_resource(test_client, auth_headers, sample_resource_data)

tests/test_routes.py:47: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_routes.py:20: in test_create_storage_resource
    response = test_client.post(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50cb3920>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
____________ TestStorageResourceRoutes.test_update_storage_resource ____________

self = <tests.test_routes.TestStorageResourceRoutes object at 0x7e0c51b7f710>
test_client = <starlette.testclient.TestClient object at 0x7e0c50cb0a10>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}
sample_resource_data = {'description': 'Test storage resource', 'isAdvancedDedupEnabled': False, 'isCompressionEnabled': False, 'isThinEnabled': True, ...}

    def test_update_storage_resource(self, test_client, auth_headers, sample_resource_data):
        # First create a resource
>       resource = self.test_create_storage_resource(test_client, auth_headers, sample_resource_data)

tests/test_routes.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_routes.py:20: in test_create_storage_resource
    response = test_client.post(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50c85c10>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
____________ TestStorageResourceRoutes.test_delete_storage_resource ____________

self = <tests.test_routes.TestStorageResourceRoutes object at 0x7e0c51b7d850>
test_client = <starlette.testclient.TestClient object at 0x7e0c50c85be0>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}
sample_resource_data = {'description': 'Test storage resource', 'isAdvancedDedupEnabled': False, 'isCompressionEnabled': False, 'isThinEnabled': True, ...}

    def test_delete_storage_resource(self, test_client, auth_headers, sample_resource_data):
        # First create a resource
>       resource = self.test_create_storage_resource(test_client, auth_headers, sample_resource_data)

tests/test_routes.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_routes.py:20: in test_create_storage_resource
    response = test_client.post(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:449: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50c19d90>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
____________ TestStorageResourceRoutes.test_host_access_management _____________

self = <tests.test_routes.TestStorageResourceRoutes object at 0x7e0c51ba8470>
test_client = <starlette.testclient.TestClient object at 0x7e0c50c1bf80>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}
sample_resource_data = {'description': 'Test storage resource', 'isAdvancedDedupEnabled': False, 'isCompressionEnabled': False, 'isThinEnabled': True, ...}

    def test_host_access_management(self, test_client, auth_headers, sample_resource_data):
        # First create a resource
>       resource = self.test_create_storage_resource(test_client, auth_headers, sample_resource_data)

tests/test_routes.py:98: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_routes.py:20: in test_create_storage_resource
    response = test_client.post(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50c81070>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
______________ TestStorageResourceRoutes.test_unauthorized_access ______________

self = <tests.test_routes.TestStorageResourceRoutes object at 0x7e0c51ba8a40>
test_client = <starlette.testclient.TestClient object at 0x7e0c50c18e00>
sample_resource_data = {'description': 'Test storage resource', 'isAdvancedDedupEnabled': False, 'isCompressionEnabled': False, 'isThinEnabled': True, ...}

    def test_unauthorized_access(self, test_client, sample_resource_data):
        # Try to create without auth
>       response = test_client.post(
            "/api/types/storageResource/instances",
            json=sample_resource_data
        )

tests/test_routes.py:116: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50c81dc0>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
_________________ TestFilesystemRoutes.test_create_filesystem __________________

self = <tests.test_routes.TestFilesystemRoutes object at 0x7e0c51ba8bf0>
test_client = <starlette.testclient.TestClient object at 0x7e0c50c853d0>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}
sample_filesystem_data = {'description': 'Test filesystem', 'name': 'test_filesystem', 'nasServer': 'nas_1', 'protocol': 'NFS', ...}

    def test_create_filesystem(self, test_client, auth_headers, sample_filesystem_data):
>       response = test_client.post(
            "/api/types/filesystem/instances",
            json=sample_filesystem_data,
            headers=auth_headers
        )

tests/test_routes.py:134: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50fd7440>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
___________________ TestFilesystemRoutes.test_get_filesystem ___________________

self = <tests.test_routes.TestFilesystemRoutes object at 0x7e0c51ba8da0>
test_client = <starlette.testclient.TestClient object at 0x7e0c50c815b0>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}
sample_filesystem_data = {'description': 'Test filesystem', 'name': 'test_filesystem', 'nasServer': 'nas_1', 'protocol': 'NFS', ...}

    def test_get_filesystem(self, test_client, auth_headers, sample_filesystem_data):
        # First create a filesystem
>       filesystem = self.test_create_filesystem(test_client, auth_headers, sample_filesystem_data)

tests/test_routes.py:147: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_routes.py:134: in test_create_filesystem
    response = test_client.post(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50c83440>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
__________________ TestNasServerRoutes.test_create_nas_server __________________

self = <tests.test_routes.TestNasServerRoutes object at 0x7e0c51ba8fe0>
test_client = <starlette.testclient.TestClient object at 0x7e0c50c83830>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}
sample_nas_data = {'currentPreferredIPv4Interface': None, 'currentUnixDirectoryService': 'None', 'description': 'Test NAS server', 'isMultiprotocolEnabled': False, ...}

    def test_create_nas_server(self, test_client, auth_headers, sample_nas_data):
>       response = test_client.post(
            "/api/types/nasServer/instances",
            json=sample_nas_data,
            headers=auth_headers
        )

tests/test_routes.py:171: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c50cb34d0>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
___________________ TestNasServerRoutes.test_get_nas_server ____________________

self = <tests.test_routes.TestNasServerRoutes object at 0x7e0c51ba9190>
test_client = <starlette.testclient.TestClient object at 0x7e0c50cb1ca0>
auth_headers = {'Authorization': 'Basic YWRtaW46c2VjcmV0'}
sample_nas_data = {'currentPreferredIPv4Interface': None, 'currentUnixDirectoryService': 'None', 'description': 'Test NAS server', 'isMultiprotocolEnabled': False, ...}

    def test_get_nas_server(self, test_client, auth_headers, sample_nas_data):
        # First create a NAS server
>       nas_server = self.test_create_nas_server(test_client, auth_headers, sample_nas_data)

tests/test_routes.py:184: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_routes.py:171: in test_create_nas_server
    response = test_client.post(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:590: in post
    return super().post(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1132: in post
    return self.request(
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:465: in request
    return super().request(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:901: in send
    response = self._send_handling_auth(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
.venv.test/lib/python3.12/site-packages/httpx/_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
.venv.test/lib/python3.12/site-packages/httpx/_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:342: in handle_request
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv.test/lib/python3.12/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval
.venv.test/lib/python3.12/site-packages/fastapi/applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:184: in __call__
    raise exc
.venv.test/lib/python3.12/site-packages/starlette/middleware/errors.py:162: in __call__
    await self.app(scope, receive, _send)
.venv.test/lib/python3.12/site-packages/starlette/middleware/base.py:108: in __call__
    response = await self.dispatch_func(request, call_next)
dell_unisphere_mock_api/main.py:65: in csrf_middleware
    verify_csrf_token(request, request.method)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7e0c511daf30>, method = 'POST'

    def verify_csrf_token(request: Request, method: str) -> None:
        """Verify CSRF token for POST and DELETE requests."""
        if method in ["POST", "DELETE"]:
            token = request.headers.get("EMC-CSRF-TOKEN")
            if not token:
>               raise HTTPException(
                    status_code=status.HTTP_403_FORBIDDEN,
                    detail="EMC-CSRF-TOKEN header is required for POST and DELETE requests"
                )
E               fastapi.exceptions.HTTPException

dell_unisphere_mock_api/core/auth.py:77: HTTPException
=============================== warnings summary ===============================
.venv.test/lib/python3.12/site-packages/pydantic/_internal/_config.py:271
.venv.test/lib/python3.12/site-packages/pydantic/_internal/_config.py:271
.venv.test/lib/python3.12/site-packages/pydantic/_internal/_config.py:271
.venv.test/lib/python3.12/site-packages/pydantic/_internal/_config.py:271
  /home/lpetrov/projects/sandbox/dell-unisphere-mock-api/.venv.test/lib/python3.12/site-packages/pydantic/_internal/_config.py:271: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

.venv.test/lib/python3.12/site-packages/pydantic/_internal/_config.py:321
  /home/lpetrov/projects/sandbox/dell-unisphere-mock-api/.venv.test/lib/python3.12/site-packages/pydantic/_internal/_config.py:321: UserWarning: Valid config keys have changed in V2:
  * 'orm_mode' has been renamed to 'from_attributes'
    warnings.warn(message, UserWarning)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html

---------- coverage: platform linux, python 3.12.3-final-0 -----------

=========================== short test summary info ============================
FAILED tests/test_disk.py::test_create_disk - fastapi.exceptions.HTTPException
FAILED tests/test_disk.py::test_create_disk_invalid_type - fastapi.exceptions...
FAILED tests/test_disk.py::test_get_disk - fastapi.exceptions.HTTPException
FAILED tests/test_disk.py::test_list_disks - assert 401 == 200
FAILED tests/test_disk.py::test_update_disk - fastapi.exceptions.HTTPException
FAILED tests/test_disk.py::test_delete_disk - fastapi.exceptions.HTTPException
FAILED tests/test_disk.py::test_get_disks_by_pool - fastapi.exceptions.HTTPEx...
FAILED tests/test_disk.py::test_get_disks_by_disk_group - fastapi.exceptions....
FAILED tests/test_disk_group.py::test_create_disk_group - fastapi.exceptions....
FAILED tests/test_disk_group.py::test_create_disk_group_invalid_raid - fastap...
FAILED tests/test_disk_group.py::test_get_disk_group - fastapi.exceptions.HTT...
FAILED tests/test_disk_group.py::test_list_disk_groups - assert 401 == 200
FAILED tests/test_disk_group.py::test_update_disk_group - fastapi.exceptions....
FAILED tests/test_disk_group.py::test_delete_disk_group - fastapi.exceptions....
FAILED tests/test_lun.py::test_create_lun - fastapi.exceptions.HTTPException
FAILED tests/test_lun.py::test_get_lun - fastapi.exceptions.HTTPException
FAILED tests/test_lun.py::test_get_lun_by_name - fastapi.exceptions.HTTPExcep...
FAILED tests/test_lun.py::test_list_luns - fastapi.exceptions.HTTPException
FAILED tests/test_lun.py::test_get_luns_by_pool - fastapi.exceptions.HTTPExce...
FAILED tests/test_lun.py::test_modify_lun - fastapi.exceptions.HTTPException
FAILED tests/test_lun.py::test_delete_lun - fastapi.exceptions.HTTPException
FAILED tests/test_lun.py::test_delete_lun_by_name - fastapi.exceptions.HTTPEx...
FAILED tests/test_pool.py::test_create_pool - fastapi.exceptions.HTTPException
FAILED tests/test_pool.py::test_get_pool - fastapi.exceptions.HTTPException
FAILED tests/test_pool.py::test_get_pool_by_name - fastapi.exceptions.HTTPExc...
FAILED tests/test_pool.py::test_list_pools - fastapi.exceptions.HTTPException
FAILED tests/test_pool.py::test_modify_pool - fastapi.exceptions.HTTPException
FAILED tests/test_pool.py::test_delete_pool - fastapi.exceptions.HTTPException
FAILED tests/test_pool.py::test_delete_pool_by_name - fastapi.exceptions.HTTP...
FAILED tests/test_pool_unit.py::test_create_pool_unit - fastapi.exceptions.HT...
FAILED tests/test_pool_unit.py::test_get_pool_unit - fastapi.exceptions.HTTPE...
FAILED tests/test_pool_unit.py::test_list_pool_units - assert 401 == 200
FAILED tests/test_pool_unit.py::test_update_pool_unit - fastapi.exceptions.HT...
FAILED tests/test_pool_unit.py::test_delete_pool_unit - fastapi.exceptions.HT...
FAILED tests/test_routes.py::TestStorageResourceRoutes::test_create_storage_resource
FAILED tests/test_routes.py::TestStorageResourceRoutes::test_get_storage_resource
FAILED tests/test_routes.py::TestStorageResourceRoutes::test_list_storage_resources
FAILED tests/test_routes.py::TestStorageResourceRoutes::test_update_storage_resource
FAILED tests/test_routes.py::TestStorageResourceRoutes::test_delete_storage_resource
FAILED tests/test_routes.py::TestStorageResourceRoutes::test_host_access_management
FAILED tests/test_routes.py::TestStorageResourceRoutes::test_unauthorized_access
FAILED tests/test_routes.py::TestFilesystemRoutes::test_create_filesystem - f...
FAILED tests/test_routes.py::TestFilesystemRoutes::test_get_filesystem - fast...
FAILED tests/test_routes.py::TestNasServerRoutes::test_create_nas_server - fa...
FAILED tests/test_routes.py::TestNasServerRoutes::test_get_nas_server - fasta...
================== 45 failed, 29 passed, 5 warnings in 15.70s ==================
